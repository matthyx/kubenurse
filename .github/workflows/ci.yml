---
name: ci
on:
  push:
  pull_request:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.32
      - name: GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --snapshot --rm-dist --skip-publish
      - name: Setup kind
        uses: engineerd/setup-kind@v0.5.0
        with:
          config: "ci/kind-config.yaml"
      - name: Show cluster info and switch to kube-system
        run: |
          kubectl cluster-info
          echo "current-context:" $(kubectl config current-context)
          kubectl config set-context --current --namespace kube-system
      - name: Import image into kind
        run: kind load docker-image postfinance/kubenurse:latest
      - name: Deploy example setup
        run: |
          kubectl apply -R -f examples/
      - name: Wait for pods
        timeout-minutes: 1
        run: |
          sleep 15 # wait for the scheduler to create pods
          kubectl wait pods -l app=kubenurse --for=condition=Ready
          kubectl get pods -l app=kubenurse
      - name: Check state of pods
        timeout-minutes: 2
        run: |
          sleep 60 # Wait to generate some checks etc.
          test $(kubectl logs -l app=kubenurse | grep -v "I'm ready to help you" | wc -l) -eq 0 # Test that there are no unexpected log lines present
          kubectl get pods -l app=kubenurse -o jsonpath='{range .items[*]}{.status.containerStatuses[0].restartCount}{"\n"}{end}' | (! grep -v 0) # Validate for 0 restarts
          test $(kubectl get pods -l app=kubenurse | wc -l) -eq 4 # Test for 3 Pods + header
      - name: Show Kubernetes resources
        run: kubectl get pods -o wide
        if: ${{ always() }}
      - name: Describe resources on failure
        run: |
          kubectl get pods -l app=kubenurse
          kubectl logs -l app=kubenurse
          kubectl describe pods -l app=kubenurse
          kubectl describe daemonsets -l app=kubenurse
          kubectl get events
        if: ${{ failure() }}
# TODO: Check metrics
